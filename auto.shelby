#!/usr/bin/env bash
set -euo pipefail

# --- Kiểm tra shelby ---
if ! command -v shelby &>/dev/null; then
  echo "Không tìm thấy lệnh 'shelby'. Hãy cài đặt trước khi chạy script."
  exit 1
fi

# --- Cấu hình ---
DATA_DIR="/root/shelby/data"
DEST_DIR="files"

# --- B1: chọn account ngẫu nhiên 1 hoặc 2 ---
i=$((RANDOM % 2 + 1))
echo "Đang dùng tài khoản Shelby số: $i"
shelby account use "$i"

# --- B2: chọn file ngẫu nhiên ---
mapfile -d '' -t files < <(find "$DATA_DIR" -maxdepth 1 -type f -print0)
if [ "${#files[@]}" -eq 0 ]; then
  echo "Không có file nào trong $DATA_DIR để upload. Thoát."
  exit 1
fi

idx=$((RANDOM % ${#files[@]}))
fullpath="${files[$idx]}"
filename="$(basename "$fullpath")"
echo "📄 File được chọn: $filename"

# --- B3: thời hạn ngẫu nhiên 365–720 ngày ---
EXPIRATION_DAYS=$((RANDOM % 356 + 365))
EXPIRATION="${EXPIRATION_DAYS}d"

src_path="$DATA_DIR/$filename"
dst_path="$DEST_DIR/$filename"

echo "Upload: $src_path → $dst_path (hết hạn sau $EXPIRATION_DAYS ngày)"

# --- B4: chạy lệnh upload có auto-confirm ---
output_file="$(mktemp)"
if shelby upload "$src_path" "$dst_path" \
  --expiration "$EXPIRATION" \
  --assume-yes | tee "$output_file"; then
  # --- Kiểm tra xem có lỗi crypto hoặc dấu ✖ không ---
  if grep -q "crypto is not defined" "$output_file" || grep -q "✖" "$output_file"; then
    echo "Upload có lỗi, KHÔNG xóa file để kiểm tra thủ công."
  else
    echo "Upload thành công! Xóa file gốc để tránh trùng lần sau..."
    rm -f -- "$src_path"
    echo "Đã xóa $src_path"
  fi
else
  echo "Upload thất bại (lệnh shelby trả lỗi)."
fi

# Dọn file tạm
rm -f "$output_file"
