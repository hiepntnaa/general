#!/bin/bash

LOGNAME=$(logname 2>/dev/null)
USER_HOME="/home/$LOGNAME"

# Tao service rl-swarm
cat << 'EOF' > /etc/systemd/system/rl-swarm.service
[Unit]
Description=RL Swarm Service
After=network.target

[Service]
Type=simple
WorkingDirectory=/root/rl-swarm
ExecStart=/bin/bash -c 'source /root/rl-swarm/.venv/bin/activate && ./run_rl_swarm.sh'
Restart=always
RestartSec=5
User=root
Environment=PYTHONUNBUFFERED=1

[Install]
WantedBy=multi-user.target
EOF

# Tao service rl-swarm2
cat << EOF > /etc/systemd/system/rl-swarm2.service
[Unit]
Description=Auto Run Gensyn Script
After=network.target

[Service]
User=root
ExecStart=$USER_HOME/gensyn/run/auto.run
Restart=always
RestartSec=10
Environment=LOGNAME=$LOGNAME

[Install]
WantedBy=multi-user.target
EOF

# Tao file auto.run (ghi de neu da ton tai)
cat << EOF > "$USER_HOME/gensyn/run/auto.run"
#!/bin/bash

# Thu muc chua du lieu goc
BASE_DIR="$USER_HOME/gensyn/run"

# Thu muc dich cua rl-swarm
TARGET_DIR="/root/rl-swarm"

# Thu muc con de copy temp-data
LOGIN_SUBDIR="modal-login"

# Ham copy file va restart
copy_and_restart() {
    local idx="\$1"
    PEM_SOURCE="\$BASE_DIR/\$idx/swarm.pem"
    TEMP_SOURCE="\$BASE_DIR/\$idx/temp-data"
    
    systemctl stop rl-swarm
    sleep 5
    
    pkill -f "yarn start" 2>/dev/null || true
    pkill -f "node.*modal-login" 2>/dev/null || true
    sleep 3
    
    rm -f "\$TARGET_DIR/swarm.pem"
    cp -f "\$PEM_SOURCE" "\$TARGET_DIR/"
    
    rm -rf "\$TARGET_DIR/\$LOGIN_SUBDIR/temp-data"
    cp -r "\$TEMP_SOURCE" "\$TARGET_DIR/\$LOGIN_SUBDIR/"
    
    systemctl start rl-swarm
    
    # Cho userData.json xuat hien
    while [ ! -f "\$TARGET_DIR/\$LOGIN_SUBDIR/temp-data/userData.json" ]; do
        sleep 5
    done
    
    # Lay ORG_ID
    ORG_ID=\$(awk 'BEGIN { FS = "\"" } !/^[ \t]*[{}]/ { print \$(NF - 1); exit }' \\
        "\$TARGET_DIR/\$LOGIN_SUBDIR/temp-data/userData.json")
    
    # Cho API key kich hoat
    while true; do
        STATUS=\$(curl -s "http://localhost:3000/api/get-api-key-status?orgId=\$ORG_ID")
        if [[ "\$STATUS" == "activated" ]]; then
            break
        else
            sleep 5
        fi
    done
}

# Lan dau dung folder 1
echo "\$(date) - Khoi dong lan dau, dung folder 1"
copy_and_restart 1

# Bat dau vong lap tu folder 2
CURRENT_INDEX=2

# Thoi gian cho toi da (10 phut)
TIMEOUT_SECONDS=600
last_detect_time=\$(date +%s)

while true; do
    LOG_LAST_30S=\$(journalctl -u rl-swarm --since "30 seconds ago" -o cat)
    current_time=\$(date +%s)
    
    if echo "\$LOG_LAST_30S" | grep -q "Joining round"; then
        last_detect_time=\$current_time
        
        # Reset index neu vuot qua 32 truoc khi dung
        if (( CURRENT_INDEX > 32 )); then
            CURRENT_INDEX=1
        fi
        
        echo "\$(date) - Phat hien Joining round, copy & restart voi folder \$CURRENT_INDEX"
        copy_and_restart "\$CURRENT_INDEX"
        ((CURRENT_INDEX++))
    else
        # Neu qua 10 phut khong phat hien Joining round thi chuyen index tiep
        if (( current_time - last_detect_time >= TIMEOUT_SECONDS )); then
            echo "\$(date) - Khong phat hien Joining round trong 10 phut, chuyen sang thu muc \$CURRENT_INDEX"
            
            # Reset index neu vuot qua 32 truoc khi dung
            if (( CURRENT_INDEX > 32 )); then
                CURRENT_INDEX=1
            fi
            
            copy_and_restart "\$CURRENT_INDEX"
            ((CURRENT_INDEX++))
            last_detect_time=\$current_time
        fi
    fi
    
    sleep 20
done
EOF

# Them quyen thuc thi
chmod +x "$USER_HOME/gensyn/run/auto.run"

# Reload systemd
systemctl daemon-reload

# Cau hinh crontab cho root
CRON_CMD="0 2,5,8,11,14,17,20,23 * * * systemctl restart rl-swarm2"
CRON_COMMENT="# Auto restart rl-swarm2 every 3 hours"

# Lay crontab hien tai cua root
CURRENT_CRON=$(crontab -l 2>/dev/null)

# Kiem tra xem cron job da ton tai chua
if echo "$CURRENT_CRON" | grep -qF "systemctl restart rl-swarm2"; then
    # Xoa dong cu va them lai
    UPDATED_CRON=$(echo "$CURRENT_CRON" | grep -vF "systemctl restart rl-swarm2" | grep -vF "Auto restart rl-swarm2")
    if [ -z "$UPDATED_CRON" ]; then
        (echo "$CRON_COMMENT"; echo "$CRON_CMD") | crontab -
    else
        (echo "$UPDATED_CRON"; echo ""; echo "$CRON_COMMENT"; echo "$CRON_CMD") | crontab -
    fi
else
    if [ -z "$CURRENT_CRON" ]; then
        (echo "$CRON_COMMENT"; echo "$CRON_CMD") | crontab -
    else
        (echo "$CURRENT_CRON"; echo ""; echo "$CRON_COMMENT"; echo "$CRON_CMD") | crontab -
    fi
fi


echo "BAT DAU CAI DAT CAC PACKAGE CAN THIET"

# Danh sach cac package can cai
PACKAGES="screen curl iptables build-essential git wget lz4 jq make gcc nano automake autoconf tmux htop nvme-cli libgbm1 pkg-config libssl-dev libleveldb-dev tar clang bsdmainutils ncdu unzip python3 python3-pip python3.10-venv"

# Kiem tra va cai dat cac package con thieu
echo "Kiem tra cac package..."
MISSING_PACKAGES=""

for pkg in $PACKAGES; do
    if ! dpkg -l | grep -q "^ii  $pkg "; then
        MISSING_PACKAGES="$MISSING_PACKAGES $pkg"
    fi
done

if [ -z "$MISSING_PACKAGES" ]; then
    echo "Tat ca cac package da duoc cai dat!"
else
    echo "Cac package can cai dat:$MISSING_PACKAGES"
    echo "Dang cai dat..."
    sudo apt update
    sudo apt install -y $MISSING_PACKAGES
    echo "Da cai dat xong cac package!"
fi


echo "KIEM TRA VA CAI DAT NODE.JS"

# Kiem tra Node.js
if command -v node &> /dev/null; then
    NODE_VERSION=$(node -v)
    NODE_MAJOR=$(echo $NODE_VERSION | cut -d'.' -f1 | sed 's/v//')
    echo "Node.js da duoc cai dat: $NODE_VERSION"
    
    if [ "$NODE_MAJOR" -lt 22 ]; then
        echo "Phien ban Node.js qua cu, dang nang cap len v22..."
        curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash -
        sudo apt-get install -y nodejs
        echo "Da nang cap Node.js!"
    else
        echo "Phien ban Node.js phu hop, khong can nang cap."
    fi
else
    echo "Node.js chua duoc cai dat, dang cai dat v22..."
    curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash -
    sudo apt-get install -y nodejs
    echo "Da cai dat Node.js!"
fi

echo "KIEM TRA VA CAI DAT YARN"


# Kiem tra Yarn
if command -v yarn &> /dev/null; then
    YARN_VERSION=$(yarn -v)
    echo "Yarn da duoc cai dat: v$YARN_VERSION"
else
    echo "Yarn chua duoc cai dat, dang cai dat..."
    curl -o- -L https://yarnpkg.com/install.sh | bash
    
    # Them Yarn vao PATH
    export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
    
    # Them vao bashrc neu chua co
    if ! grep -q ".yarn/bin" ~/.bashrc; then
        echo 'export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"' >> ~/.bashrc
    fi
    
    source ~/.bashrc
    echo "Da cai dat Yarn!"
fi

# Xac dinh thu muc rl-swarm
RL_SWARM_DIR="/root/rl-swarm"

echo ""

echo "KIEM TRA VA CLONE RL-SWARM"


# Kiem tra thu muc rl-swarm
if [ -d "$RL_SWARM_DIR" ]; then
    echo "Thu muc rl-swarm da ton tai tai: $RL_SWARM_DIR"
    echo "Bo qua buoc git clone."
else
    echo "Thu muc rl-swarm chua ton tai, dang clone..."
    cd /root
    git clone https://github.com/hiepntnaa/rl-swarm/
    
    if [ $? -eq 0 ]; then
        echo "Da clone thanh cong rl-swarm!"
    else
        echo "LOI: Khong the clone rl-swarm!"
        exit 1
    fi
fi

echo ""

echo "KIEM TRA VA TAO VIRTUAL ENVIRONMENT"


# Kiem tra .venv trong rl-swarm
if [ -d "$RL_SWARM_DIR/.venv" ]; then
    echo "Virtual environment da ton tai tai: $RL_SWARM_DIR/.venv"
    echo "Bo qua buoc tao venv."
else
    echo "Virtual environment chua ton tai, dang tao..."
    cd "$RL_SWARM_DIR"
    python3 -m venv .venv
    
    if [ $? -eq 0 ]; then
        echo "Da tao thanh cong virtual environment!"
    else
        echo "LOI: Khong the tao virtual environment!"
        exit 1
    fi
fi


echo ""
echo -e "\e[92mDe hoan tat chay: cd /root/rl-swarm && . .venv/bin/activate && ./run_first.sh\e[0m"
echo ""
echo -e "\e[92mDoi toi khi node bat dau trainnig thi dung lai, sau do chay service bang lenh ben duoi:\e[0m"
echo ""
echo -e "\e[92msystemctl enable rl-swarm rl-swarm2 && systemctl restart rl-swarm2\e[0m"
echo ""
